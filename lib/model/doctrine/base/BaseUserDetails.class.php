<?php

/**
 * BaseUserDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $email_address
 * @property string $phone_number
 * @property text $comments
 * 
 * @method string      getName()          Returns the current record's "name" value
 * @method string      getEmailAddress()  Returns the current record's "email_address" value
 * @method string      getPhoneNumber()   Returns the current record's "phone_number" value
 * @method text        getComments()      Returns the current record's "comments" value
 * @method UserDetails setName()          Sets the current record's "name" value
 * @method UserDetails setEmailAddress()  Sets the current record's "email_address" value
 * @method UserDetails setPhoneNumber()   Sets the current record's "phone_number" value
 * @method UserDetails setComments()      Sets the current record's "comments" value
 * 
 * @package    learning1.4
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserDetails extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_details');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('phone_number', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('comments', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}